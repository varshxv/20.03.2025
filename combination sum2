import java.util.*;

public class Solution {
    public List<List<Integer>> combinationSum2(int[] candidates, int target) {
        Arrays.sort(candidates); 
        List<List<Integer>> result = new ArrayList<>();
        backtrack(result, new ArrayList<>(), candidates, target, 0);
        return result;
    }
    private void backtrack(List<List<Integer>> result, List<Integer> tempList, int[] nums, int remain, int start) {
        if (remain < 0) return; 
        else if (remain == 0) result.add(new ArrayList<>(tempList));  
        else {
            for (int i = start; i < nums.length; i++) {
                if (i > start && nums[i] == nums[i - 1]) continue;
                tempList.add(nums[i]); 
                backtrack(result, tempList, nums, remain - nums[i], i + 1); 
                tempList.remove(tempList.size() - 1);
            }
        }
    }
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter the number of candidates: ");
        int n = scanner.nextInt();
        int[] candidates = new int[n];
        System.out.println("Enter the candidates values:");
        for (int i = 0; i < n; i++) {
            candidates[i] = scanner.nextInt();
        }
        System.out.print("Enter the target value: ");
        int target = scanner.nextInt();
        Solution solution = new Solution();
        System.out.println("Combinations that sum to target: " + solution.combinationSum2(candidates, target));
        scanner.close(); 
    }
}
